#%RAML 0.8
title: Nahual Project
version: v1
baseUri: http://localhost:8080/

protocols:
  - HTTP

/student:
  displayName: student
  description: Estudiantes del Proyecto Nahual
  get:
    description: Devuelve una coleccion de Estudiantes
    queryParameters:
      minGraduationDate:
        type: date
        required: false
        example: 2018-03-28
      maxGraduationDate:
        type: date
        required: false
        example: 2018-03-28
      node:
        type: number
        required: false
      graduated:
        type: boolean
        required: false
        description: True indica solo estudiantes graduados
      working:
        type: boolean
        required: false
        description: True indica solo estudiantes trabajando
      lookingForWork:
        type: boolean
        required: false
        description: True indica solo estudiantes buscando trabajo
      page:
        type: number
        required: true
        description: Número de página, 0-based
      size:
        type: number
        required: true
        description: Cantidad de elementos por página
    responses:
      200:
        description: Obtencion exitosa de todos los estudiantes(Incluso los que estan marcados con borrado logico)
        body:
          application/json:
            example: |
              [
                {
                    "content": [
                        {
                            "id": 1,
                            "name": "First",
                            "lastName": "Last",
                            "node": {
                                "id": 1,
                                "name": "Banfield",
                                "address": "Morazán 669",
                                "students": [
                                    {
                                        "id": 1,
                                        "name": "First",
                                        "lastName": "Last",
                                        "deleted": false,
                                        "interviews": [],
                                        "node": {
                                            "id": 1,
                                            "name": "Banfield",
                                            "address": "Morazán 669",
                                            "students": [
                                                1
                                            ]
                                        },
                                        "email": "estudiante@gmail.com",
                                        "phone": "1112223333",
                                        "resumeUrl": "linkedin.com/estudiante1",
                                        "feedback": null
                                    }
                                ]
                            },
                            "deleted": false,
                            "courdeDate": "2018-03-01",
                            "graduationDate": null,
                            "email": "estudiante@gmail.com",
                            "phone": "1112223333",
                            "resumeUrl": "linkedin.com/estudiante1",
                            "lookingForWork": true,
                            "working": false,
                            "feedback": null,
                            "interviews": 0
                        }
                    ],
                    "pageable": {
                        "sort": {
                            "sorted": false,
                            "unsorted": true
                        },
                        "offset": 0,
                        "pageSize": 20,
                        "pageNumber": 0,
                        "paged": true,
                        "unpaged": false
                    },
                    "last": true,
                    "totalPages": 1,
                    "totalElements": 1,
                    "size": 20,
                    "number": 0,
                    "numberOfElements": 1,
                    "first": true,
                    "sort": {
                        "sorted": false,
                        "unsorted": true
                    }
                }
              ]
  post:
    description: Creacion de un nuevo estudiante del Proyecto Nahual
    responses:
      200:
        description: Creacion exitosa de un estudiante
        body:
          application/json:
            example: |
              {
                  "id": 1,
                  "name": "First",
                  "lastName": "Last",
                  "courseDate": "2018-03-01",
                  "graduationDate": null,
                  "deleted": false,
                  "interviews": [],
                  "node": {
                      "id": 1,
                      "name": "Banfield",
                      "address": "Morazán 669",
                      "students": [
                          1
                      ]
                  },
                  "email": "estudiante@gmail.com",
                  "phone": "1112223333",
                  "resumeUrl": "linkedin.com/estudiante1",
                  "lookingForWork": true,
                  "working": false,
                  "feedback": null
              }
      400:
        description: Error en la creacion de un estudiante por falta de parametros
        body:
          application/json:
            example: |
              {
                "timestamp": 1481306059861,
                "status": 400,
                "error": "Bad Request",
                "exception": "org.springframework.web.bind.MissingServletRequestParameterException",
                "message": "Required String parameter 'name' is not present",
                "path": "/student"
              }
    queryParameters:
      name:
        description: Nombre del estudiante
        type: string
        required: true
        example: Daniel
      lastName:
        description: Apellido del estudiante
        type: string
        required: true
        example: Apellido
      node:
        description: Id de un nodo
        type: number
        required: true
      graduationDate:
        type: date
        required: false
        example: 2018-03-28
      courseDate:
        type: date
        required: false
        example: 2018-03-28
      email:
        description: Email del estudiante
        type: string
        required: false
        example: estudiante@gmail.com
      phone:
        description: Teléfono del estudiante
        type: string
        required: false
        example: 1112223333
      resumeUrl:
        description: URL del CV del estudiante
        type: string
        required: false
        example: linkedin.com/estudiante
      working:
        description: True si el estudiante está trabajando
        type: boolean
        required: true
        example: True
      lookingForWork:
        description: True si el estudiante está buscando trabajando
        type: boolean
        required: true
        example: True
      feedback:
        description: Feedback del profesor
        type: string
        required: false
        example: Feedback
  /{id}:
    delete:
      description: Elimina un estudiante por su Id
    get:
      description: Detalle de un estudiante por su Id
    put:
      description: Modificación un estudiante por su Id
      responses:
        200:
          description: Modificación exitosa de una estudiante
          body:
            application/json:
              example: |
                {
                    "id": 1,
                    "name": "First",
                    "lastName": "Last",
                    "courseDate": "2018-03-01",
                    "graduationDate": null,
                    "deleted": false,
                    "interviews": [],
                    "node": {
                        "id": 1,
                        "name": "Banfield",
                        "address": "Morazán 669",
                        "students": [
                            1
                        ]
                    },
                    "email": "estudiante@gmail.com",
                    "phone": "1112223333",
                    "resumeUrl": "linkedin.com/estudiante1",
                    "lookingForWork": true,
                    "working": false,
                    "feedback": null
                }
        400:
          description: Error por falta de parametro en la modificación de un estudiante
          body:
            application/json:
              example: |
                {
                  "timestamp": 1481306391582,
                  "status": 400,
                  "error": "Bad Request",
                  "exception": "org.springframework.web.bind.MissingServletRequestParameterException",
                  "message": "Required String parameter 'name' is not present",
                  "path": "/student"
                }
      queryParameters:
        node:
          description: Id de un nodo
          type: number
          required: true
        graduationDate:
          type: date
          required: false
          example: 2018-03-28
        courseDate:
          type: date
          required: false
          example: 2018-03-28
        email:
          description: Email del estudiante
          type: string
          required: false
          example: estudiante@gmail.com
        phone:
          description: Teléfono del estudiante
          type: string
          required: false
          example: 1112223333
        resumeUrl:
          description: URL del CV del estudiante
          type: string
          required: false
          example: linkedin.com/estudiante
        working:
          description: True si el estudiante está trabajando
          type: boolean
          required: true
          example: True
        lookingForWork:
          description: True si el estudiante está buscando trabajando
          type: boolean
          required: true
          example: True
        feedback:
          description: Feedback del profesor
          type: string
          required: false
          example: Feedback

  /bulk:
    post:
      description: Alta masiva de alumnos a traves de un archivo CSV
      queryParameters:
        csv:
          type: file
          required: true
      responses:
        202:
          description: El archivo se proceso exitosamente
        500:
          description: Ocurrio un error en el proceso del archivo

/company:
  displayName: company
  description: Compañias que tendran contacto con los estudiantes
  get:
    description: Devuelve todas las compañias existentes
    responses:
      200:
        description: Obtencion exitosa de las compañias existentes
        body:
          application/json:
            example: |
              {
                  "content": [
                      {
                          "id": 1,
                          "name": "Pivotal",
                          "email": "Josh",
                          "working": 0,
                          "interviewed": 1
                      }
                  ],
                  "pageable": {
                      "sort": {
                          "sorted": false,
                          "unsorted": true
                      },
                      "pageSize": 10,
                      "pageNumber": 0,
                      "offset": 0,
                      "unpaged": false,
                      "paged": true
                  },
                  "last": true,
                  "totalElements": 1,
                  "totalPages": 1,
                  "first": true,
                  "sort": {
                      "sorted": false,
                      "unsorted": true
                  },
                  "numberOfElements": 1,
                  "size": 10,
                  "number": 0
              }
    queryParameters:
      name:
        type: string
        required: false
        description: Nombre para filtrar
      workers:
        type: boolean
        required: false
        description: True indica solo compañías con nahualerxs trabajando en ella
      interviews:
        type: boolean
        required: false
        description: True indica solo compañías que hayan entrevistado nahualerxs
      page:
        type: number
        required: true
        description: Número de página, 0-based
      size:
        type: number
        required: true
        description: Cantidad de elementos por página
  post:
    description: Creacion de una nueva compañia
    responses:
      200:
        description: Creacion exitosa de una nueva compañia
        body:
          application/json:
            example: |
              {
                "id": 2,
                "name": "TARNET S.A.",
                "contact": "Juan",
                "interviews": []
              }
      400:
        description: Error por falta de parametro en la creacion de una nueva compañia
        body:
          application/json:
            example: |
              {
                "timestamp": 1481306391582,
                "status": 400,
                "error": "Bad Request",
                "exception": "org.springframework.web.bind.MissingServletRequestParameterException",
                "message": "Required String parameter 'email' is not present",
                "path": "/company"
              }
    queryParameters:
      name:
        type: string
        required: true
        example: TARNET S.A.
      contact:
        type: string
        required: true
        example: Juan
      email:
        type: string
        required: true
        example: juan@tarnet.com
      comments:
        type: string
        required: false
        example: comentarios de la compañia
  /{id}:
    get:
      description: Detalle de una compañia por su Id
    delete:
      description: Eliminar una compañia por su Id
    put:
      description: Modificacion de una compañia
      responses:
        200:
          description: Modificacion exitosa de una compañia
          body:
            application/json:
              example: |
                {
                  "id": 2,
                  "name": "TARNET S.A.",
                  "contact": "Juan",
                  "interviews": []
                }
        400:
          description: Error por falta de parametro en la modificacion de una compañia
          body:
            application/json:
              example: |
                {
                  "timestamp": 1481306391582,
                  "status": 400,
                  "error": "Bad Request",
                  "exception": "org.springframework.web.bind.MissingServletRequestParameterException",
                  "message": "Required String parameter 'contact' is not present",
                  "path": "/company"
                }
      queryParameters:
        name:
          type: string
          required: true
          example: TARNET S.A.
        contact:
          type: string
          required: true
          example: Juan
        email:
          type: string
          required: true
          example: juan@tarnet.com
        comments:
          type: string
          required: false
          example: comentarios de la compañia

/node:
  displayName: node
  description: Un nodo es el lugar de graduacion de los estudiantes
  get:
    responses:
      200:
        description: Obtencion exitosa de los nodos
        body:
          application/json:
            example: |
              [
                {
                  "id": 1,
                  "name": "Banfield",
                  "address": "CalleFalsa123"
                },
                {
                  "id": 2,
                  "name": "Claypole",
                  "address": "Crisantemo6457"
                },
                {
                  "id": 3,
                  "name": "FlorencioVarela",
                  "address": "AnicetoDiaz432"
                }
              ]
    description: Se obtienen todos los nodos existentes
  post:
    responses:
      200:
        description: Creacion exitosa de un nodo
        body:
          application/json:
            example: |
              {
                "id": 2,
                "name": "Claypole",
                "address": "Crisantemo6457",
                "students": []
              }
      400:
        description: Error en la creacion de un nodo nuevo por falta de parametros
        body:
          application/json:
            example: |
              {
                "timestamp": 1481306462897,
                "status": 400,
                "error": "Bad Request",
                "exception": "org.springframework.web.bind.MissingServletRequestParameterException",
                "message": "Required String parameter 'name' is not present",
                "path": "/node"
              }
    description: Creacion de un nodo nuevo
    queryParameters:
      name:
        description: Nombre del nodo a crear
        type: string
        required: true
        example: Banfield
      address:
        description: Direccion del nodo
        type: string
        required: true
        example: Calle Falsa 123
  /{id}:
    get:
      description: Obtiene los nodos segun el Id

/interview:
  description: Entrevistas que tienen los estudiantes con las compañias.
  displayName: interview
  get:
    description: Obtiene todas las entrevistas
    responses:
      200:
        description: Obtencion exitosa de todas las entrevistas
        body:
          application/json:
            example: |
              [
                {
                  "id": 1,
                  "student": {
                    "id": 2,
                    "name": "Daniel",
                    "date": 1481305396000,
                    "deleted": false,
                    "node": {
                      "id": 1,
                      "name": "Banfield",
                      "address": "CalleFalsa123"
                    }
                  },
                  "company": {
                    "id": 1,
                    "name": "TARNET",
                    "email": "Nicolas"
                  },
                  "date": "2016-12-09",
                  "comments": "Sin comentarios"
                }
              ]
    queryParameters:
      desc:
        description: Parametro que indica si la lista estara ordenada en forma Descendente
        type: boolean
        required: true
        default: false
      when:
        type: date
        required: false
        example: 2018-03-28
      student:
        description: Id de un estudiante especifico
        type: number
        required: false
  post:
    description: Creacion de una entrevista
    responses:
      200:
        description: Creacion exitosa de una entrevista
        body:
          application/json:
            example: |
              {
                "id": 1,
                "student": {
                  "id": 2,
                  "name": "Daniel",
                  "date": 1481305396000,
                  "deleted": false,
                  "interviews": [
                    1
                  ],
                  "node": {
                    "id": 1,
                    "name": "Banfield",
                    "address": "CalleFalsa123",
                    "students": [
                      2
                    ]
                  }
                },
                "company": {
                  "id": 1,
                  "name": "TARNET",
                  "contact": "Nicolas",
                  "interviews": [
                    1
                  ]
                },
                "date": 1481305541172,
                "comments": "Sin comentarios"
              }
      400:
        description: Error en la creacion de una entrevista por falta de parametros
        body:
          application/json:
            example: |
              {
                "timestamp": 1481306714946,
                "status": 400,
                "error": "Bad Request",
                "exception": "org.springframework.web.bind.MissingServletRequestParameterException",
                "message": "Required long parameter 'studentId' is not present",
                "path": "/interview"
              }
    queryParameters:
      student:
        description: Id de un estudiante
        type: number
        required: true
        example: 2
      company:
        description: Id de una compañia
        type: number
        required: true
        example: 1
  /{id}:
    get:
      description: Obtiene una entrevista por Id
